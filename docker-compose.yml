version: '3.9'

services:
  db:
    image: postgres
    container_name: frog-cafe-db-new
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: 'GMT+3'
      PGTZ: 'GMT+3'
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      - ./Backend/sql_code/InitDB.sql:/docker-entrypoint-initdb.d/InitDB.sql:ro
    ports:
      - "5444:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 60s
      timeout: 3s
      retries: 5
    networks:
      - backend

  backend:
    build:
      context: ./Backend
    container_name: frog-cafe-backend
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      FRONTEND_URL: http://localhost:${FRONTEND_PORT}
      BACKEND_URL: http://localhost:${BACKEND_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES}
    depends_on:
      - db
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - backend

  frontend:
    build:
      context: ./Frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    container_name: frog-cafe-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    networks:
      - backend

volumes:
  db_data:

networks:
  backend:
    driver: bridge
